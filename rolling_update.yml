---
# This playbook does a rolling update for all webservers serially (one at a time).
# Change the value of serial: to adjust the number of server to be updated.
#
# The three roles that apply to the webserver hosts will be applied: common,
# base-apache, and web. So any changes to configuration, package updates, etc,
# will be applied as part of the rolling update process.
#

# gather facts from monitoring nodes for iptables rules
- hosts: monitoring
  tasks: []

- hosts: webservers
  become: yes
  serial: 1

  pre_tasks:
  - name: Disable nagios alerts for the webserver {{ inventory_hostname }}
    nagios: 'action=disable_alerts host={{ inventory_hostname }} services=webserver'
    delegate_to: "{{ item }}"
    with_items: "{{ groups.monitoring }}"

  - name: Disable the webserver {{ inventory_hostname }} in haproxy
    haproxy: 'state=disabled backend=myapplb host={{ inventory_hostname }} socket=/var/lib/haproxy/stats'
    delegate_to: "{{ item }}"
    with_items: "{{ groups.lbservers }}"

  roles:
  - common
  - base-apache
  - web

  post_tasks:
  - name: Wait for webserver {{ inventory_hostname }} to come up
    wait_for:
      host: "{{ ansible_default_ipv4.address }}"
      port: 80
      state: started 
      timeout: 80

  - name: Wait for the webserver {{ inventory_hostname }} to be up on
    uri:
      url: http://{{ ansible_default_ipv4.address }}
      method: GET
      return_content: yes
      status_code: 200
    register: response
    ignore_errors: true

  - name: Enable the web server {{ inventory_hostname }} in haproxy
    haproxy: 
      state: enabled 
      backend: myapplb 
      host: "{{ inventory_hostname }}"
      socket: /var/lib/haproxy/stats
    delegate_to: "{{ item }}"
    with_items: "{{ groups.lbservers }}"

  - name: Enable nagios alerts for the web server {{ inventory_hostname }}
    nagios: 'action=enable_alerts host={{ inventory_hostname }} services=webserver'
    delegate_to: "{{ item }}"
    with_items: "{{ groups.monitoring }}"
